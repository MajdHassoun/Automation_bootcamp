{"name": "test_save_search", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test.save_search_test.LibraryTest testMethod=test_save_search>\n\n    def test_save_search(self):\n        \"\"\" This test inserts a search, click on \"Save Search\" button and checks if the search\n        has been saved in the \"Saved Searches\" page\"\"\"\n        logging.info(\"Test test_save_search STARTED\")\n        # Arrange\n        self.home_page.search_book_flow(self.config[\"book_name1\"])\n        # Act\n        self.results_page.click_save_search_button()\n        self.results_page.click_confirm_save_search_button()\n>       self.base_page_app.navigate_to_saved_searches_flow()\n\ntest\\save_search_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogic\\base_page_app.py:125: in navigate_to_saved_searches_flow\n    WebDriverWait(self._driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1468438109120fdc81061569b46861f1\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x0000024E76BC0700>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\Final Project Part1\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": " This test inserts a search, click on \"Save Search\" button and checks if the search\n        has been saved in the \"Saved Searches\" page", "attachments": [{"name": "log", "source": "d4294857-3aab-49ab-8184-0427572bb2aa-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "87b427ac-9cdd-4842-83a1-18373bc79189-attachment.txt", "type": "text/plain"}], "start": 1722105967917, "stop": 1722106025222, "uuid": "be2aa7de-8439-48c4-9106-47ad484f06b5", "historyId": "a3a610d6a43ae77f07e05da2693f69ad", "testCaseId": "a3a610d6a43ae77f07e05da2693f69ad", "fullName": "test.save_search_test.LibraryTest#test_save_search", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "save_search_test"}, {"name": "subSuite", "value": "LibraryTest"}, {"name": "host", "value": "MajdHassoun"}, {"name": "thread", "value": "2968-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.save_search_test"}]}